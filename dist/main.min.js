const t=t=>function e(...r){return t.length!==r.length?e.bind(null,...r):t(...r)},e=t=>t.some((t=>Boolean(t))),r=t=>t.some((t=>!t)),n=t(((t,e,r,n,o)=>{const c=[...o],l="number"==typeof e?e:t-1,s=r||o.length;for(let e=l;e<s;e+=t)c[e]=n;return c})),o=t(((t,e,r)=>{const n=[...r];return n[t]=e,n})),c=t(((t,e)=>{let r;switch(Object.prototype.toString.call(e)){case"[object Array]":r=[];for(const n of e)r.push(t(n));return r;case"[object Object]":r={};for(const n of Object.keys(e))r[n]=t(e[n]);return r}})),l=t((t=>null!==t&&"[object Array]"===Object.prototype.toString.call(t))),s=t((t=>"[object Object]"===Object.prototype.toString.call(t))),u=(...t)=>e=>t.reduce(((t,e)=>e(t)),e),f=t((t=>l(t)||s(t)?c((t=>"number"==typeof t?t-1:t),t):t-1)),h=c(f),b=t((t=>l(t)||s(t)?c((t=>"number"==typeof t?t+1:t),t):t+1)),g=c(b),i=t(((t,e)=>{const r=[];let n=0;for(;n<e;)r[n]=t(n),n++;return r})),p=t(((t,e)=>{const r=e.length;let n=0;for(;n<r;){if(t(e[n]))return e[n];n++}})),j=t(((t,e)=>{const r=e.length;let n=0;for(;n<r;){if(t(e[n]))return n;n++}})),y=t(((t,e)=>{const r=e.length;let n=0;for(;n<r;)t(e[n]),n++;return e})),a=t((t=>{const e=[],r=t.length;let n=0;for(;n<r;){if("[object Array]"===Object.prototype.toString.call(t[n])){const r=a(t[n]),o=r.length;let c=0;for(;c<o;)e.push(r[c]),c++}else e.push(t[n]);n++}return e})),O=t(((t,e)=>{const r=[],n=e.length;let o=0;for(;o<n;)t(e[o])&&r.push(e[o]),o++;return r})),m=t(((t,e)=>{for(const r of Object.keys(t))if(t[r]!==e[r])return!1;return!0})),S=t(((t,e)=>{for(const r of e)if(m(r,t))return!0;return!1})),A=t((t=>{const e=t.length;if(e<=1)return t;const r=[];for(let n=0;n<e;n++)S(t[n],r)||r.push(t[n]);return r})),d=t(((t,e)=>{const r=[...e],n=e.length;for(let o=0;o<n;o++)if(e[o]===t)return r.splice(o,1),r;return r})),k=t(((t,e)=>{const r=e.length;for(let n=0;n<r;n++)if(!t(e[n]))return!1;return!0})),w=t(((t,e)=>{const r=e.length;for(let n=0;n<r;n++)if(t(e[n]))return!0;return!1})),x=t(((t,e,r)=>Object.assign({},r,{[t]:e(r[t])})));export{k as all,w as any,t as curry,f as decrement,h as decrementEach,O as filter,p as find,j as findIndex,a as flatten,y as forEach,r as hasFalsy,e as hasTruthy,b as increment,g as incrementEach,c as map,x as modify,m as objEqual,S as objectInArray,u as pipe,d as remove,A as removeDuplicateObj,i as repeat,o as replaceAt,n as replaceEveryNth};
